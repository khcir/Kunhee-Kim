{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "79be3489",
   "metadata": {},
   "source": [
    "## Getting the list of product URLs from the main page"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4629f08c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "3\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "180"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import time\n",
    "import re\n",
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "from selenium import webdriver\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.webdriver.common.keys import Keys\n",
    "from selenium.webdriver.support.ui import WebDriverWait\n",
    "from selenium.webdriver.support import expected_conditions as EC\n",
    "\n",
    "# create an instance of webdriver object, which is like opening a browser when the driver is called\n",
    "driver = webdriver.Chrome()\n",
    "\n",
    "# navigate to the page\n",
    "main_url = \"https://shop.lululemon.com/c/women/_/N-7vf?icid=lp-story:women;1a;lphero;cdp:womens-clothes;seasonal:fa21\"\n",
    "driver.get(main_url)\n",
    "\n",
    "# wait 5 seconds\n",
    "time.sleep(5)\n",
    "\n",
    "# scroll to the bottom of the page to load all of the products\n",
    "elem = driver.find_element_by_tag_name(\"body\")\n",
    "\n",
    "no_of_pagedowns = 20\n",
    "\n",
    "while no_of_pagedowns:\n",
    "    elem.send_keys(Keys.PAGE_DOWN)\n",
    "    time.sleep(0.2)\n",
    "    no_of_pagedowns-=1\n",
    "    \n",
    "# clicking the 'View more products' button\n",
    "load_button_xpath = '//*[@id=\"main-content\"]/div/section/div/div[2]/div/button'\n",
    "click_count = 0\n",
    "max_clicks = 3\n",
    "\n",
    "while click_count < max_clicks:\n",
    "    try:\n",
    "        loadMoreButton = driver.find_element_by_xpath(load_button_xpath)\n",
    "        time.sleep(2)\n",
    "        loadMoreButton.click()\n",
    "        click_count += 1\n",
    "        print(click_count)\n",
    "        time.sleep(5)\n",
    "    except Exception as e:\n",
    "        print(e)\n",
    "        break\n",
    "\n",
    "    \n",
    "# attribute of where the source code of page is stored in a string format\n",
    "html = driver.page_source \n",
    "\n",
    "# create an instance of BeautifulSoup\n",
    "soup = BeautifulSoup(html, \"html.parser\")\n",
    "\n",
    "link_xpath = '//a[@href]'\n",
    "\n",
    "links = driver.find_elements_by_xpath(link_xpath)\n",
    "\n",
    "link_list = []\n",
    "\n",
    "for link in links:\n",
    "    #print(link.get_attribute('href'))\n",
    "    if link.get_attribute('href') not in link_list:\n",
    "        link_list.append(link.get_attribute('href'))\n",
    "    else:\n",
    "        continue\n",
    "    \n",
    "# filter out all non-product links    \n",
    "reg = re.compile('/p/')    \n",
    "\n",
    "filtered_link_list = list(filter(reg.search, link_list))\n",
    "\n",
    "len(filtered_link_list)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5e094ba",
   "metadata": {},
   "source": [
    "## Scraping each product"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "2c61ec78",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"BVRRContainer\"]/div/div/div/div/div[3]/div/button\"}\n",
      "  (Session info: chrome=95.0.4638.54)\n",
      "\n",
      "  ★★★★★  No rating value \n",
      "1\n",
      "2\n",
      "3\n",
      "  ★★★★★   ★★★★★  \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  2 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  2 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  2 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  1 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  1 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  1 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  1 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  2 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  2 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  1 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  1 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  2 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  2 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  2 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  3 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  2 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  4 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n",
      "  ★★★★★   ★★★★★  5 out of 5 stars. \n"
     ]
    }
   ],
   "source": [
    "product_name = []\n",
    "rating_list = []\n",
    "title_list = []\n",
    "review_list = []\n",
    "\n",
    "# loop through each product link; launch and scrape one-by-one\n",
    "for product in filtered_link_list[0:2]:\n",
    "    url = product\n",
    "    driver2 = webdriver.Chrome()\n",
    "    driver2.get(url)\n",
    "    \n",
    "    # execute Javascript inside the browser to scroll the webpage\n",
    "    driver2.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n",
    "\n",
    "    # wait 5 seconds\n",
    "    time.sleep(5)\n",
    "    \n",
    "    # clicking the 'load more' button\n",
    "    load_button_xpath = '//*[@id=\"BVRRContainer\"]/div/div/div/div/div[3]/div/button'\n",
    "    click_count = 0\n",
    "    max_clicks = 3\n",
    "    \n",
    "    while click_count < max_clicks:\n",
    "        try:\n",
    "            loadMoreButton = driver2.find_element_by_xpath(load_button_xpath)\n",
    "            time.sleep(2)\n",
    "            loadMoreButton.click()\n",
    "            click_count += 1\n",
    "            print(click_count)\n",
    "            time.sleep(5)\n",
    "        except Exception as e:\n",
    "            print(e)\n",
    "            break\n",
    "\n",
    "\n",
    "    soup = BeautifulSoup(driver2.page_source, 'html.parser')\n",
    "    \n",
    "    product = soup.find(\"div\", class_=\"col-xs-12\")\n",
    "    \n",
    "    stars = soup.find_all(\"span\", class_= \"bv-rating-stars-container\")\n",
    "    \n",
    "    titles = soup.find_all(\"div\", class_=\"bv-content-title-container\")\n",
    "    \n",
    "    reviews = soup.find_all(\"div\", class_=\"bv-content-summary-body-text\")\n",
    "    \n",
    "    for s in stars:\n",
    "        text = s.text\n",
    "        print(text)\n",
    "        match = re.search(r'(\\d+) out of 5 stars', text)\n",
    "        if match:\n",
    "            rating_list.append(match.group(1))\n",
    "    \n",
    "    for t in titles:\n",
    "        title_list.append(t.text)\n",
    "        #print(t.text)\n",
    "        \n",
    "        product_name.append(product.text)\n",
    "        #print(product.text)\n",
    "    \n",
    "    for r in reviews:\n",
    "        review_list.append(r.text)\n",
    "        #print(r.text)\n",
    "\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ec222a8d",
   "metadata": {},
   "source": [
    "## Creating the DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "07c1d53b",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(98, 107, 107, 107)"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(rating_list), len(title_list), len(review_list), len(product_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "032463d2",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "df = pd.DataFrame()\n",
    "\n",
    "# add columns\n",
    "df['rating'] = rating_list\n",
    "df['title'] = title_list\n",
    "df['review'] = review_list\n",
    "df['product'] = product_name\n",
    "\n",
    "# remove tags from product name\n",
    "df['product'] = df['product'].str.replace(r'New', '')\n",
    "df['product'] = df['product'].str.replace(r'Nulu', '')\n",
    "df['product'] = df['product'].str.replace(r'\\u2122', '', regex=True)\n",
    "\n",
    "# remove customer support responses\n",
    "df = df.replace(r'^\\s*$', np.nan, regex=True)\n",
    "df = df.dropna()\n",
    "\n",
    "print(len(df))\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7e894cf8",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df['product'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e159980b",
   "metadata": {},
   "source": [
    "## Export DataFrame to CSV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "ea37b87a",
   "metadata": {},
   "outputs": [],
   "source": [
    "file_name = 'lululemon_website_reviews_v2.csv'\n",
    "df.to_csv(file_name)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "508e5323",
   "metadata": {},
   "source": [
    "## Test code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c028a72c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[@id=\"BVRRContainer\"]/div/div/div/div/div[3]/div/button/span\"}\n",
      "  (Session info: chrome=94.0.4606.71)\n",
      "\n",
      "     My favorite tank    \n",
      "     Best Length for Petites!    \n",
      "     Half marathon approved!    \n",
      "     Overpriced and tight    \n",
      "     Swiftly tech    \n",
      "     Disappointed fit and material    \n",
      "     Swifly Tech tops are my fav!    \n",
      "     LOVE THIS HAVE TONS OF THESE    \n",
      "     Perfect length for 5’4”    \n",
      "     Not My Favorite Tank    \n",
      "     So comfy but droops    \n",
      "     Cute but rides up    \n",
      "     Buy it    \n",
      "     Size Down    \n",
      "     Pleasantly Surprised    \n",
      "     Swiftly tank top    \n",
      "     Okay but not great    \n",
      "     Love this top!!!    \n",
      "     Big chested women beware.    \n",
      "     love    \n",
      "     Crop top    \n",
      "     Tiny Top, Big Money    \n",
      "     super cute but..    \n",
      "     Racer top    \n",
      "     Love the fit but poor quality    \n",
      " \n",
      "     cute, comfy, love the length    \n",
      "     Great product    \n",
      "     Race or Casual, This is the Best    \n",
      "     Perfect active tank    \n",
      "     Swiftly tech race length tank top    \n",
      "     sizing and fitting    \n",
      "     Perfect workout tank for short girls    \n",
      "     Great Greatttttttttttt Greatttttttttttt Greatttt    \n",
      "     the PERFECT tank top    \n",
      "     Marathon Training Tank    \n",
      "     Love it!!    \n",
      "     Runs a little large through the chest.    \n",
      "     Race length raceback    \n",
      "     THE BEST!    \n",
      "     too short for a short person    \n",
      "     Racer back tank top - racer length    \n",
      "     Great workout tank    \n",
      "     Race Length is the Best!    \n",
      "     Light and Comfy Tank    \n",
      "     obsessed    \n",
      "     great tank!    \n",
      "     Poor Quality    \n",
      " \n",
      "     My favorite color    \n",
      "     A must have!    \n",
      "     Great top!    \n",
      "     Love it!    \n",
      "     Love it but the quality is disappointing    \n",
      " \n",
      "     Beware stains damage shirt!    \n",
      " \n",
      "     It’s great if you don’t have a long torso!    \n",
      "     Coverage frustration    \n",
      "     Perfect length for running!    \n",
      "     My new go-to workout tank!    \n",
      "     Flattering fit    \n",
      "     100% Awesome!!    \n",
      "     Swiftly race length racer back    \n",
      "     Love the color but snags easily    \n",
      "     Cute but cheap    \n",
      " \n",
      "     brings out my tan    \n",
      "     Love it!    \n",
      "     Swiftly tech tank    \n",
      "     See-through    \n",
      "     Shorter length    \n",
      "     Love this race length tank    \n",
      "     Not for me    \n",
      "     Easily snags    \n",
      " \n",
      "     Great Product    \n",
      "     Good running top.    \n",
      "     Received as a gift and ❤️    \n",
      "     Like It but not Love It    \n",
      "     Perfect length!    \n",
      "     Petite perfection    \n",
      "     Comfortable but rides up    \n",
      "     Good, not great    \n",
      "     great top but sizing is weird?    \n",
      "     The Bomb.com    \n",
      "     Material doesn't hold up    \n",
      "     Breathable and flattering!    \n",
      "     Race length is perfection!!!    \n",
      "     Don’t be fooled by the colour on the website!    \n",
      "     very mixed feelings about this top    \n",
      "     Fit isn't perfect, but love the material    \n",
      "     Great length    \n",
      "     Very flattering and I love the color!    \n",
      "     Flimsy top with a high price    \n",
      "     Finally    \n",
      "     Snagged on First gym wear    \n",
      " \n",
      "     Love it    \n",
      "     LOVE!!    \n",
      "     Perfect length for shorties!    \n",
      "     Great cut, fabric and length    \n",
      "     GREAT TANKTOP    \n",
      "     Length    \n",
      "     Race length Swiftly Tech Racerback Tank    \n",
      "     cute but thin    \n",
      " \n",
      "     Perfect for the heat    \n",
      "     Love the new length!    \n",
      "     Love this length    \n",
      "     Boxy. Unflattering.    \n",
      "     mtrdchbnmj    \n",
      "     Great material and design    \n",
      "     Perfect length for petites    \n",
      "     Swiftly Tech Tank    \n",
      "     Favourite Tank    \n",
      "     Too short    \n",
      " \n",
      "     Very Comfy!    \n",
      "     Tank top lightweight    \n",
      "     Excellent length!    \n",
      "     Best workout tank ever    \n",
      "     Gorg and flattering, perfect fit    \n",
      "     Love the race length    \n",
      "     Swiftly Tech Race back length    \n",
      "     I want this in every color!    \n",
      "     Finally a perfect length for me!    \n",
      "     New favorite running tank!    \n",
      "     great tank, color wrong    \n",
      "     Great buy!    \n",
      "     Super cute    \n",
      "     Perfect length    \n",
      "     Phenomenal Length    \n",
      "     Comfortable!!    \n",
      "     Great workout tank    \n",
      "     AMAZED    \n",
      "     Love the colors    \n",
      "     Doesn't bunch up around waist!    \n",
      "     Two inches too short    \n",
      "     Swiftly tank race length    \n",
      "     My favorite running tanks!    \n",
      "     Nailed it    \n",
      "     love love love    \n",
      "     Race length shirts    \n",
      "     race length fits well for petite    \n",
      "     Awesome tank    \n",
      "     Huge Fan    \n",
      "     Perfect tank    \n",
      "     Perfect length!    \n",
      "     Lacking for my marathon    \n",
      "     Okay    \n",
      "     Finally!    \n",
      "     Favorite thing from lulu <3    \n",
      "     Runner Girl    \n",
      "     Great length and great color    \n",
      "     Perfect tank    \n",
      "     Best length for petites!    \n",
      "     Not for smaller chested girls    \n",
      "     Guava Pink material sheer and not like lululemon    \n",
      " \n",
      "     Favorite tank!    \n",
      "     Best workout tank ever!!    \n",
      "     LOVE!    \n",
      "     Not a fan!    \n",
      "     Nice length and soft but...    \n",
      "     Love it    \n",
      "     Great purchase!    \n",
      "     Race length a game changer!    \n",
      "     Size 8    \n",
      "     Good purchase    \n",
      "     Great top!    \n",
      "     LOVE the length!!    \n",
      "     perfect cut    \n",
      "     Great tank top    \n",
      "     Nice fit and length    \n",
      "     Perfect Length!    \n",
      "     Comfy!    \n",
      "     Not worth the $$    \n",
      "     Perfect Length    \n",
      "     Perfect tank    \n",
      "     Great length for petite/short torsos    \n",
      "     Perfect!    \n",
      "     Perfect length    \n",
      "     Swiftly Teck RB 2.0 *Race    \n",
      "     Nice but won't purchase again    \n",
      "     Make More    \n",
      "     Fits well and great color    \n",
      "     It rides up and doesn't stay in place    \n",
      "     Perfect workout tank    \n",
      "     Perfect length for my petite frame    \n",
      "     Perfect for workouts    \n",
      "     Must have!!!    \n",
      "     Super short    \n",
      "     Perfect    \n",
      "     Best tank top    \n",
      "     PERFECT for petite!    \n",
      "     Great top but stretched out after first wear    \n",
      "     My favorite top!    \n",
      "     Great tank that is sooo cute!    \n",
      "     Swiftly tech racer back 2.0 race length    \n",
      "     Great tank for any exercise    \n",
      "     Love this tank!    \n",
      "     Swifly race length tank    \n",
      "     I cannot wear anything else during a workout.    \n",
      "     Finally!    \n",
      "     More colors please!!!    \n",
      "     Comfortable and not so long, it shows more your bo    \n",
      "     Love the fabric, feels cool to the touch    \n",
      "     Perfect Fit    \n",
      "     Perfect lenght and fit. A must have!    \n",
      "     Fave lulu top ever    \n",
      "     Race length tank    \n",
      "     Fantastic new length!    \n",
      "     Size down    \n",
      "     PERFECT FOR SHORTIES    \n",
      "     I like the length but the neckline is low    \n",
      " \n",
      "     The best!    \n",
      "     Great product!    \n",
      "     Always looking for race length it’s great    \n",
      "     Surprisingly thin material.    \n",
      " \n",
      "     Perfect Running Tank for Petites!    \n",
      "     Rides up    \n",
      " \n",
      "     Tank Shirt Red    \n",
      "     I LOVE this tank!!!    \n",
      "     Great Length for a Tank    \n",
      "     PERFECT LENGTH    \n",
      "     Tank top    \n",
      "     Favorite Tank    \n",
      "     Not great in some ways    \n",
      "     Love it!!!!!!!    \n",
      "     Perfect petite length!    \n",
      "     I wish every tank came in Race Length!    \n",
      "     Was hoping it to be more Swiftly-like!    \n",
      "     It would have been the perfect tank    \n",
      " \n",
      "     Love the length    \n",
      "     Perfect length    \n",
      "     Perfect Top for Any Activity!    \n",
      "     I love these!!!    \n",
      "     It’s cool to have another option I suppose.    \n",
      "     Great top!    \n",
      "     Rides up    \n",
      " \n",
      "     A shorter swiftly    \n",
      "     FINALLY! a perfect length top for shorter women    \n",
      "     Great length for CrossFit and Weightlifting    \n",
      "     Perfect workout tank    \n",
      "     Super cute tank!    \n",
      "     Love the race length!!    \n",
      "     Love this one!    \n",
      "     Love! Perfected cropped tank    \n",
      "     Great Tank!    \n",
      "     Perfect length!!    \n",
      "     Please bring back the old Swiftly    \n",
      "     Perfect fit    \n",
      "     Perfect length    \n",
      "     Love the length!    \n",
      "     Tank top    \n",
      "     Perfect length!    \n",
      "     Best workout top    \n",
      "     Perfect Tank    \n",
      "     Love the length!!! Please make more colors    \n",
      "     100% recommend    \n",
      "     Perfect length    \n",
      "     the best tank top    \n",
      "     love the short length    \n",
      "     need more colours!!    \n",
      "     Perfect length!    \n",
      "     Bought more colors!    \n",
      "     Perfect Length!    \n",
      "     Great Fit For People With Short Torsos!!    \n",
      "     I LOVE THE RACE LENGTH!    \n",
      "     THE BEST RUNNING TANK EVER    \n",
      "     Best tank!    \n",
      "     Beautiful color and comfy material    \n",
      "     Nice pink    \n",
      "     The tank I have always wanted!    \n",
      "     Perfect cut    \n",
      "     Great tank    \n",
      "     Length    \n",
      "     Love the material and length    \n",
      "     Love the material and length    \n",
      "     Favorite tank from Lulu    \n",
      "     In love with race length    \n",
      "     Do not recommend    \n",
      " \n",
      "     Fit    \n",
      "     Race Length = Perfection    \n",
      "     Love!    \n",
      "     A perfect staple!    \n",
      "     Love it!    \n",
      "     Swiftly Tech Race Tank    \n",
      "     Perfect for shorter women!    \n",
      "     So cute but too short!    \n",
      "     Great material and perfect length    \n",
      "     Great breathability and not too tight.    \n",
      "     PERFECT LENGTH    \n",
      "     Perfect length and fits true to size!    \n",
      "     Disappointed with this purchase :(    \n",
      " \n",
      "     Perfect length and fit!    \n",
      "     This top is amazing    \n",
      "     totally recommend    \n",
      "     This is a winner!!!!    \n",
      "     Perfect length!    \n",
      "     Perfect length for workout    \n",
      "     Cropped fit    \n",
      "     Perfect Tank    \n",
      "     The perfect length!    \n",
      "     best lulu top!    \n",
      "     The best top on Lululemon.com    \n",
      "     the perfect length    \n",
      "     Perfect Running Tank    \n",
      "     MY FAVORITE TANK    \n",
      "     LOVE THIS LENGTH    \n",
      "     Perfect Shirt for a Petite    \n",
      "     Perfect top    \n",
      "     Perfect LENGTH!    \n",
      "     Perfect length    \n",
      "     Cute and perfect length    \n",
      "     UPGRADE    \n",
      "     My favorite- please restock!    \n",
      "     Perfect length and perfect fit!    \n",
      "     Love this!    \n",
      "     love the length    \n",
      "     Swiftly tech cropped tank :))    \n",
      "     MORE COLORS    \n",
      "     Much improved, more versatile length than the og.    \n",
      "     Perfect Work Out (and every day!) Tank!    \n",
      "     Perfect length    \n",
      "     Love it!    \n",
      "     Great For Muscular Petites    \n",
      "     My new favorite running tank top!    \n",
      "     perfect for summer runs!    \n",
      "     Great length and material    \n",
      "     Need more!    \n",
      "     Finally the right length!    \n",
      "     Perfect length    \n",
      "     I’ll take all the colors    \n",
      "     Love it    \n",
      "     Game Changing Crop    \n",
      "     Nice Tank, Not For Me    \n",
      " \n",
      "     The best!    \n",
      "     Comfy Running Tank    \n",
      "     Fav tank top!    \n",
      "     Great tank!    \n",
      "     Cute but rides up while running    \n",
      "     Swiftly Tech Racerback 2.0    \n",
      "     Lightweight    \n",
      "     Excellent running tank    \n",
      "     Short version is on point!    \n",
      "     Snag and Pill after one wear!! Extremely irritated    \n",
      " \n",
      "     race length    \n",
      "     Fantastic    \n",
      "     In love with the Race Length!    \n",
      "     Great product    \n",
      "     Happy with my purchase!    \n",
      "     Race length tank    \n",
      "     Perfect fit    \n",
      "     Must try!    \n",
      "     Perfect fit for shorter torso    \n",
      "     Racerback Tank :)    \n",
      "     Length    \n",
      "     FAVORITE. TANK. EVER.    \n",
      "     love    \n",
      "     New favorite tank    \n",
      "     The best running tank top!    \n",
      "     10/10 tank top    \n",
      "     Perfect length for summer    \n",
      "     Perfect Fit    \n",
      "     Great workout top    \n",
      "     New Favorite Tank    \n",
      "     Length>>>>    \n",
      "     Race length = Crop top    \n",
      " \n",
      "     Better fit, softer fabric    \n",
      "     Tank top fit on shorter women    \n",
      "     Great Tank!    \n",
      "     Perfect tank    \n",
      "     Perfect length!    \n",
      "     AMAZING!    \n",
      "     Surprisingly perfect    \n",
      "     New favorite shirt    \n",
      "     Perfect!    \n",
      "     Perfect running tank!    \n",
      "     Amazing!!    \n",
      "     Very complimenting    \n",
      "     Finally a tanktop friendly for us short gals!    \n",
      "     Perfection    \n",
      "     Mixed    \n",
      " \n",
      "     Doesn’t ride up on runs!    \n",
      "     Great length!    \n",
      "     Perfect running tank    \n",
      "     Love the new material    \n",
      "     Perfect for petite girls!    \n",
      "     The perfect tank    \n",
      "     FINALLY the perfect length T!!!    \n",
      "     Prefer to the original swiftlys!    \n",
      "     Fanastic running tank    \n",
      "     Swiftly tech racer back 2.0 race length    \n",
      "     Perfect top    \n",
      "     Too short    \n",
      " \n",
      "     Want more!    \n",
      "     swiftly tech is not a wreck    \n",
      "     Love the shorter length!    \n",
      "     Swiftly 2.0    \n",
      "     Absolutely love!    \n",
      "     love love love this    \n",
      "     love    \n",
      "     Yes!!!    \n",
      "     LOVE!    \n",
      "     LOVE    \n",
      "     Perfect Tank    \n",
      "     Perfect Fit!    \n",
      "     we need more tanks like this!    \n",
      "     Perfect fit, even for shorties!    \n",
      "     smooth    \n",
      "     Swiftly tech racerback race length    \n",
      "     Tank    \n",
      "     Perfect Length!    \n",
      "     Great length for petites    \n",
      "     Great shirt!    \n",
      "     Great top    \n",
      "     Perfect length    \n",
      "     Perfect length    \n",
      "     Great crop length for tall ladies, doesn't ride up    \n",
      "     Great - but beware if you have a long torso!    \n",
      "     Runs Large    \n",
      "     Better fit than the original slim fit.    \n",
      "     I love this tank!    \n",
      "     Amazing fabric for run/lounge    \n",
      "     Essential Workout Tank    \n",
      "     Race fit is not for me.    \n",
      " \n",
      "     Great tank for everyday workout    \n",
      "     Good running top    \n",
      "     Love this length    \n",
      "     Great tank!    \n",
      "     Love it!    \n",
      "     Great top and length    \n",
      "     Need in every color!    \n",
      "     I am obsessed but need more colors please!!    \n",
      "     Amazing for shorter girls    \n",
      "     Love this material    \n",
      "     Pairs well with higher waisted shorts    \n",
      "     Love this shirt!    \n",
      "     Light weight    \n",
      "     Perfect Update!    \n",
      "     LOVE this top!    \n",
      "     Best tank and length, make more!    \n",
      "     So happy with my purchase!    \n",
      "     Love!    \n",
      "     Race length tank    \n",
      "     Best tank!!    \n",
      "     LOVE IT    \n",
      "     Love shorter length tank!!    \n",
      "     great product! new favorite!    \n",
      "     Great improvement of past versions    \n",
      "     You'll want this in every color!    \n",
      "     Love!!!    \n",
      "     Worth the money    \n",
      "     Love, love, love the race lenth!    \n",
      "     My favorite tank!    \n",
      "     favorite tank    \n",
      "     New favourite!    \n",
      "     Great tops!    \n",
      "     More colors please!!    \n",
      "     Perfect tank    \n",
      "     great new length!    \n",
      "     Great tank!    \n",
      "     Super comfy tank!    \n",
      "     Love the length    \n",
      "     PERFECT LENGTH    \n",
      "     MORE COLORS please    \n",
      "     Love!    \n",
      "     Love racer back tanks and love this length    \n",
      "     Wish I Bought More Than 1    \n",
      "     Best length    \n",
      "     Length is everything!!!    \n",
      "     The perfect length!    \n",
      "     Perfect fit!    \n",
      "     Great feel and lightweight!    \n",
      "     I Love It    \n",
      "     Surprised!    \n",
      "     The Perfect Tank    \n",
      "     Running excellent product!    \n",
      "     So comfortable!    \n",
      "     MORE COLORS PLEASE!    \n",
      "     Definitely worth it!    \n",
      "     SO COMFORTABLE!    \n",
      "     Love the new length    \n",
      "     Great Length!!!    \n",
      "     Perfect length!    \n",
      "     Perfect length!    \n",
      "     Didn't care for the fit.    \n",
      "     Love this length!    \n",
      "     Perfect length!!    \n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>My favorite tank</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Best Length for Petites!</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Half marathon approved!</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Overpriced and tight</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Swiftly tech</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>499</th>\n",
       "      <td>Perfect length!</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>500</th>\n",
       "      <td>Perfect length!</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>501</th>\n",
       "      <td>Didn't care for the fit.</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>502</th>\n",
       "      <td>Love this length!</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>503</th>\n",
       "      <td>Perfect length!!</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>504 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 title\n",
       "0                 My favorite tank    \n",
       "1         Best Length for Petites!    \n",
       "2          Half marathon approved!    \n",
       "3             Overpriced and tight    \n",
       "4                     Swiftly tech    \n",
       "..                                 ...\n",
       "499                Perfect length!    \n",
       "500                Perfect length!    \n",
       "501       Didn't care for the fit.    \n",
       "502              Love this length!    \n",
       "503               Perfect length!!    \n",
       "\n",
       "[504 rows x 1 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create an instance of webdriver object, which is like opening a browser when the driver is called\n",
    "test_driver = webdriver.Chrome()\n",
    "\n",
    "# navigate to the page\n",
    "test_driver.get(\"https://shop.lululemon.com/p/women-tanks/Swiftly-Tech-RB-2-Race/_/prod9750460?color=45849\")\n",
    "\n",
    "# exceute Javascript inside the browser to scroll the webpage\n",
    "test_driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n",
    "\n",
    "# wait 5 seconds\n",
    "import time\n",
    "time.sleep(5)\n",
    "\n",
    "# clicking the 'load more' button\n",
    "load_button_xpath = '//*[@id=\"BVRRContainer\"]/div/div/div/div/div[3]/div/button/span'\n",
    "\n",
    "while True:\n",
    "    try:\n",
    "        loadMoreButton = test_driver.find_element_by_xpath(load_button_xpath)\n",
    "        time.sleep(2)\n",
    "        loadMoreButton.click()\n",
    "        time.sleep(5)\n",
    "    except Exception as e:\n",
    "        print(e)\n",
    "        break\n",
    "\n",
    "# attribute of where the source code of page is stored in a string format\n",
    "html = test_driver.page_source \n",
    "\n",
    "# create an instance of BeautifulSoup\n",
    "soup = BeautifulSoup(html, \"html.parser\")\n",
    "\n",
    "title_list_test = []\n",
    "\n",
    "titles = soup.find_all(\"div\", class_='bv-content-title-container')\n",
    "\n",
    "for t in titles:\n",
    "    title_list_test.append(t.text)\n",
    "    print(t.text)\n",
    "    \n",
    "test_df = pd.DataFrame()\n",
    "\n",
    "test_df['title'] = title_list_test\n",
    "\n",
    "test_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "2b921f24",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "2\n",
      "3\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(132, 130, 132)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "product_name = []\n",
    "title_list = []\n",
    "review_list = []\n",
    "\n",
    "# create an instance of webdriver object, which is like opening a browser when the driver is called\n",
    "test_driver = webdriver.Chrome()\n",
    "\n",
    "test_driver.get(filtered_link_list[29])\n",
    "\n",
    "# exceute Javascript inside the browser to scroll the webpage\n",
    "test_driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n",
    "\n",
    "# wait 5 seconds\n",
    "import time\n",
    "time.sleep(5)\n",
    "\n",
    "# clicking the 'load more' button\n",
    "load_button_xpath = '//*[@id=\"BVRRContainer\"]/div/div/div/div/div[3]/div/button/span'\n",
    "click_count = 0\n",
    "max_clicks = 3\n",
    "\n",
    "while click_count < max_clicks:\n",
    "    try:\n",
    "        loadMoreButton = test_driver.find_element_by_xpath(load_button_xpath)\n",
    "        time.sleep(2)\n",
    "        loadMoreButton.click()\n",
    "        click_count += 1\n",
    "        print(click_count)\n",
    "        time.sleep(5)\n",
    "    except Exception as e:\n",
    "        print(e)\n",
    "        break\n",
    "\n",
    "\n",
    "soup = BeautifulSoup(test_driver.page_source, 'html.parser')\n",
    "\n",
    "product = soup.find(\"div\", class_=\"col-xs-12\")\n",
    "\n",
    "titles = soup.find_all(\"div\", class_=\"bv-content-title-container\")\n",
    "\n",
    "reviews = soup.find_all(\"div\", class_=\"bv-content-summary-body-text\")\n",
    "\n",
    "\n",
    "\n",
    "for t in titles:\n",
    "    title_list.append(t.text)\n",
    "    #print(t.text)\n",
    "\n",
    "    product_name.append(product.text)\n",
    "    #print(product.text)\n",
    "\n",
    "for r in reviews:\n",
    "    review_list.append(r.text)\n",
    "    #print(r.text)\n",
    "\n",
    "len(title_list), len(review_list), len(product_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "549e21d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'                ★★★★★   ★★★★★  5 out of 5 stars.      Jeanette805     · 9 months ago \\xa0           High quality           Super soft material, tight knit, easy zipper, flattering      In a few words, what did you like?  High quality, soft knit    Size Purchased  small    Usual Size  small            How did your gear fit?            Smaller  Rating of 1 means Smaller  Larger  Rating of 5 means Larger  How did your gear fit?, average rating value is 3 of 5.     '"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "post = soup.find_all(\"div\", class_= \"bv-content-core\")\n",
    "\n",
    "post[1].text\n",
    "post[2].text"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c12937d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5\n"
     ]
    }
   ],
   "source": [
    "rate = soup.find_all(\"span\", class_= \"bv-rating-stars-container\")\n",
    "\n",
    "text = rate[1].text\n",
    "\n",
    "num = re.search(r'(\\d+) out of 5 stars', text)\n",
    "\n",
    "if num:\n",
    "    print(num.group(1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "20923606",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Message: chrome not reachable\n",
      "  (Session info: chrome=94.0.4606.71)\n",
      "\n"
     ]
    },
    {
     "ename": "WebDriverException",
     "evalue": "Message: chrome not reachable\n  (Session info: chrome=94.0.4606.71)\n",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mWebDriverException\u001b[0m                        Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-28-eb0bed8c79a9>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m     34\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     35\u001b[0m \u001b[1;31m# attribute of where the source code of page is stored in a string format\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 36\u001b[1;33m \u001b[0mhtml\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdriver\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpage_source\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     37\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     38\u001b[0m \u001b[1;31m# create an instance of BeautifulSoup\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\envs\\data-x\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\u001b[0m in \u001b[0;36mpage_source\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m    677\u001b[0m             \u001b[0mdriver\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mpage_source\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    678\u001b[0m         \"\"\"\n\u001b[1;32m--> 679\u001b[1;33m         \u001b[1;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mCommand\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mGET_PAGE_SOURCE\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'value'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    680\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    681\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\envs\\data-x\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\u001b[0m in \u001b[0;36mexecute\u001b[1;34m(self, driver_command, params)\u001b[0m\n\u001b[0;32m    319\u001b[0m         \u001b[0mresponse\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcommand_executor\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexecute\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdriver_command\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mparams\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    320\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mresponse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 321\u001b[1;33m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0merror_handler\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcheck_response\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    322\u001b[0m             response['value'] = self._unwrap_value(\n\u001b[0;32m    323\u001b[0m                 response.get('value', None))\n",
      "\u001b[1;32m~\\anaconda3\\envs\\data-x\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\u001b[0m in \u001b[0;36mcheck_response\u001b[1;34m(self, response)\u001b[0m\n\u001b[0;32m    240\u001b[0m                 \u001b[0malert_text\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mvalue\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m'alert'\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'text'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    241\u001b[0m             \u001b[1;32mraise\u001b[0m \u001b[0mexception_class\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mscreen\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mstacktrace\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0malert_text\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 242\u001b[1;33m         \u001b[1;32mraise\u001b[0m \u001b[0mexception_class\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mmessage\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mscreen\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mstacktrace\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    243\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    244\u001b[0m     \u001b[1;32mdef\u001b[0m \u001b[0m_value_or_default\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mobj\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mdefault\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mWebDriverException\u001b[0m: Message: chrome not reachable\n  (Session info: chrome=94.0.4606.71)\n"
     ]
    }
   ],
   "source": [
    "# create an instance of webdriver object, which is like opening a browser when the driver is called\n",
    "driver = webdriver.Chrome()\n",
    "\n",
    "# navigate to the page\n",
    "main_url = \"https://shop.lululemon.com/c/women/_/N-7vf?icid=lp-story:women;1a;lphero;cdp:womens-clothes;seasonal:fa21\"\n",
    "driver.get(main_url)\n",
    "\n",
    "# wait 5 seconds\n",
    "time.sleep(5)\n",
    "\n",
    "# scroll to the bottom of the page to load all of the products\n",
    "elem = driver.find_element_by_tag_name(\"body\")\n",
    "\n",
    "no_of_pagedowns = 20\n",
    "\n",
    "while no_of_pagedowns:\n",
    "    elem.send_keys(Keys.PAGE_DOWN)\n",
    "    time.sleep(0.2)\n",
    "    no_of_pagedowns-=1\n",
    "    \n",
    "# clicking the 'View more products' button\n",
    "load_button_xpath = '//*[@id=\"main-content\"]/div/section/div/div[2]/div/button'\n",
    "\n",
    "while True:\n",
    "    try:\n",
    "        loadMoreButton = driver.find_element_by_xpath(load_button_xpath)\n",
    "        time.sleep(2)\n",
    "        loadMoreButton.click()\n",
    "        time.sleep(5)\n",
    "    except Exception as e:\n",
    "        print(e)\n",
    "        break\n",
    "\n",
    "    \n",
    "# attribute of where the source code of page is stored in a string format\n",
    "html = driver.page_source \n",
    "\n",
    "# create an instance of BeautifulSoup\n",
    "soup = BeautifulSoup(html, \"html.parser\")\n",
    "\n",
    "link_xpath = '//a[@href]'\n",
    "\n",
    "links = driver.find_elements_by_xpath(link_xpath)\n",
    "\n",
    "link_list = []\n",
    "\n",
    "for link in links:\n",
    "    #print(link.get_attribute('href'))\n",
    "    if link.get_attribute('href') not in link_list:\n",
    "        link_list.append(link.get_attribute('href'))\n",
    "    else:\n",
    "        continue\n",
    "    \n",
    "reg = re.compile('/p/')    \n",
    "\n",
    "filtered_link_list = list(filter(reg.search, link_list))\n",
    "\n",
    "len(filtered_link_list)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8254fb22",
   "metadata": {},
   "source": [
    "# Old Code"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c57c80a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# create an instance of webdriver object, which is like opening a browser when the driver is called\n",
    "driver = webdriver.Chrome()\n",
    "\n",
    "# navigate to the page\n",
    "main_url = \"https://shop.lululemon.com/c/women/_/N-7vf?icid=lp-story:women;1a;lphero;cdp:womens-clothes;seasonal:fa21\"\n",
    "driver.get(main_url)\n",
    "\n",
    "# wait 5 seconds\n",
    "time.sleep(5)\n",
    "    \n",
    "# attribute of where the source code of page is stored in a string format\n",
    "html = driver.page_source \n",
    "\n",
    "# create an instance of BeautifulSoup\n",
    "soup = BeautifulSoup(html, \"html.parser\")\n",
    "\n",
    "# create a list where the product links will be stored\n",
    "product_links = []\n",
    "\n",
    "# loop through each product link and add the unique links to the list\n",
    "for link in soup.find_all('a', href=re.compile('/p/')):\n",
    "    # removes duplicate URLs\n",
    "    if link['href'] not in product_links:\n",
    "        print(link['href'])\n",
    "        product_links.append(link['href'])\n",
    "    else:\n",
    "        continue\n",
    "    \n",
    "print(product_links)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
